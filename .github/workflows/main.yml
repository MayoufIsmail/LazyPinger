# Windows VersionV1
name: Build, Test, and Release MAUI for Windows

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Check Code Formatting
        run: dotnet format --verify-no-changes --verbosity detailed
        continue-on-error: true

  build-and-test:
    needs: lint
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'microsoft'
      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ./.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Install .NET MAUI Workloads
        run: dotnet workload restore
      - name: Begin SonarQube Scan
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /k:"DZimo_LazyPinger" /o:"dzimo" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.cobertura.reportsPaths=TestResults/coverage.cobertura.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Build the solution
        run: dotnet build LazyPinger.sln -c Release
      - name: Run Tests and Collect Coverage
        run: dotnet test LazyPinger.Tests/LazyPinger.Tests.csproj -c Release --results-directory "./TestResults" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura

      - name: End SonarQube Scan
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Publish MAUI App
        run: dotnet publish LazyPinger.MAUI/LazyPinger.MAUI.csproj -f net8.0-windows10.0.19041.0 -c Release -o ./publish --no-build
      
      - name: Upload Application Artifact
        uses: actions/upload-artifact@v4
        with:
          name: LazyPinger-Windows
          path: ./publish

  release:
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: windows-latest

    permissions:
      contents: write
    steps:
      - name: Download Application Artifact
        uses: actions/download-artifact@v4
        with:
          name: LazyPinger-Windows
          path: ./publish
          
     
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./publish/*
          tag_name: v1.0.${{ github.run_number }}
          name: Release v1.0.${{ github.run_number }}
          body: |
            Automated release for build ${{ github.run_number }}.
